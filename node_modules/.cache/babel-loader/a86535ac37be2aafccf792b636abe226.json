{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dhananjay srinivas\\\\Desktop\\\\REACT\\\\Tic Tac Toe\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport Icon from \"./components/Icon\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Card, CardBody, Container, Button, Col, Row } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\nconst itemArray = new Array(9).fill(\"empty\");\n\nconst App = () => {\n  const [isCross, setIsCross] = useState(false);\n  const [winMessage, setWinMessage] = useState(\"\");\n\n  const reloadGame = () => {\n    setIsCross(false);\n    setWinMessage(\"\");\n    itemArray.fill(\"empty\", 0, 9);\n  };\n\n  const checkIsWinner = () => {\n    //  checking  winner of the game\n    if (itemArray[0] === itemArray[1] && itemArray[0] === itemArray[2] && itemArray[0] !== \"empty\") {\n      setWinMessage(`${itemArray[0]} won`);\n    } else if (itemArray[3] !== \"empty\" && itemArray[3] === itemArray[4] && itemArray[4] === itemArray[5]) {\n      setWinMessage(`${itemArray[3]} won`);\n    } else if (itemArray[6] !== \"empty\" && itemArray[6] === itemArray[7] && itemArray[7] === itemArray[8]) {\n      setWinMessage(`${itemArray[6]} won`);\n    } else if (itemArray[0] !== \"empty\" && itemArray[0] === itemArray[3] && itemArray[3] === itemArray[6]) {\n      setWinMessage(`${itemArray[0]} won`);\n    } else if (itemArray[1] !== \"empty\" && itemArray[1] === itemArray[4] && itemArray[4] === itemArray[7]) {\n      setWinMessage(`${itemArray[1]} won`);\n    } else if (itemArray[2] !== \"empty\" && itemArray[2] === itemArray[5] && itemArray[5] === itemArray[8]) {\n      setWinMessage(`${itemArray[2]} won`);\n    } else if (itemArray[0] !== \"empty\" && itemArray[0] === itemArray[4] && itemArray[4] === itemArray[8]) {\n      setWinMessage(`${itemArray[0]} won`);\n    } else if (itemArray[2] !== \"empty\" && itemArray[2] === itemArray[4] && itemArray[4] === itemArray[6]) {\n      setWinMessage(`${itemArray[2]} won`);\n    }\n  };\n\n  const changeItem = itemNumber => {\n    if (winMessage) {\n      return toast(winMessage, {\n        type: \"success\"\n      });\n    }\n\n    if (itemArray[itemNumber] === \"empty\") {\n      itemArray[itemNumber] = isCross ? \"cross\" : \"circle\";\n      setIsCross(!isCross);\n    } else {\n      return toast(\"already filled\", {\n        type: \"error\"\n      });\n    }\n\n    checkIsWinner();\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"p-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ToastContainer, {\n    position: \"bottom-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    className: \"offset-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, winMessage ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-success text-uppercase text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, winMessage), /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    block: true,\n    onClick: reloadGame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, \"Reload the game\")) : /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center text-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, isCross ? \"Cross\" : \"Circle\", \" turns\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, itemArray.map((item, index) => /*#__PURE__*/React.createElement(Card, {\n    color: \"warning\",\n    onClick: () => changeItem(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }))))))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Dhananjay srinivas/Desktop/REACT/Tic Tac Toe/src/App.js"],"names":["React","useState","Icon","ToastContainer","toast","Card","CardBody","Container","Button","Col","Row","itemArray","Array","fill","App","isCross","setIsCross","winMessage","setWinMessage","reloadGame","checkIsWinner","changeItem","itemNumber","type","map","item","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport Icon from \"./components/Icon\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Card, CardBody, Container, Button, Col, Row } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\n\nconst itemArray = new Array(9).fill(\"empty\");\n\nconst App = () => {\n  const [isCross, setIsCross] = useState(false);\n  const [winMessage, setWinMessage] = useState(\"\");\n\n  const reloadGame = () => {\n    setIsCross(false);\n    setWinMessage(\"\");\n    itemArray.fill(\"empty\", 0, 9);\n  };\n\n  const checkIsWinner = () => {\n    //  checking  winner of the game\n    if (\n      itemArray[0] === itemArray[1] &&\n      itemArray[0] === itemArray[2] &&\n      itemArray[0] !== \"empty\"\n    ) {\n      setWinMessage(`${itemArray[0]} won`);\n    } else if (\n      itemArray[3] !== \"empty\" &&\n      itemArray[3] === itemArray[4] &&\n      itemArray[4] === itemArray[5]\n    ) {\n      setWinMessage(`${itemArray[3]} won`);\n    } else if (\n      itemArray[6] !== \"empty\" &&\n      itemArray[6] === itemArray[7] &&\n      itemArray[7] === itemArray[8]\n    ) {\n      setWinMessage(`${itemArray[6]} won`);\n    } else if (\n      itemArray[0] !== \"empty\" &&\n      itemArray[0] === itemArray[3] &&\n      itemArray[3] === itemArray[6]\n    ) {\n      setWinMessage(`${itemArray[0]} won`);\n    } else if (\n      itemArray[1] !== \"empty\" &&\n      itemArray[1] === itemArray[4] &&\n      itemArray[4] === itemArray[7]\n    ) {\n      setWinMessage(`${itemArray[1]} won`);\n    } else if (\n      itemArray[2] !== \"empty\" &&\n      itemArray[2] === itemArray[5] &&\n      itemArray[5] === itemArray[8]\n    ) {\n      setWinMessage(`${itemArray[2]} won`);\n    } else if (\n      itemArray[0] !== \"empty\" &&\n      itemArray[0] === itemArray[4] &&\n      itemArray[4] === itemArray[8]\n    ) {\n      setWinMessage(`${itemArray[0]} won`);\n    } else if (\n      itemArray[2] !== \"empty\" &&\n      itemArray[2] === itemArray[4] &&\n      itemArray[4] === itemArray[6]\n    ) {\n      setWinMessage(`${itemArray[2]} won`);\n    }\n  };\n\n  const changeItem = (itemNumber) => {\n    if (winMessage) {\n      return toast(winMessage, { type: \"success\" });\n    }\n\n    if (itemArray[itemNumber] === \"empty\") {\n      itemArray[itemNumber] = isCross ? \"cross\" : \"circle\";\n      setIsCross(!isCross);\n    } else {\n      return toast(\"already filled\", { type: \"error\" });\n    }\n\n    checkIsWinner();\n  };\n\n  return (\n    <Container className=\"p-5\">\n      <ToastContainer position=\"bottom-center\" />\n      <Row>\n        <Col md={6} className=\"offset-md-3\">\n          {winMessage ? (\n            <div className=\"mb-2 mt-2\">\n              <h1 className=\"text-success text-uppercase text-center\">\n                {winMessage}\n              </h1>\n              <Button color=\"success\" block onClick={reloadGame}>\n                Reload the game\n              </Button>\n            </div>\n          ) : (\n            <h1 className=\"text-center text-warning\">\n              {isCross ? \"Cross\" : \"Circle\"} turns\n            </h1>\n          )}\n          <div className=\"grid\">\n            {itemArray.map((item, index) => (\n              <Card color=\"warning\" onClick={() => changeItem(index)}>\n                <CardBody className=\"box\">\n                  <Icon name={item} />\n                </CardBody>\n              </Card>\n            ))}\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}